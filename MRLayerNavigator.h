/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

#import "MRLayer.h"

@class MCContainerNavigator, MRTransition, NSDictionary, NSMutableArray, NSMutableDictionary;

@interface MRLayerNavigator : MRLayer
{
    MCContainerNavigator *mContainer;
    NSMutableArray *mSublayers;
    NSMutableDictionary *mSublayersForPlugs;
    MRLayer *mCurrentSublayer;
    MRLayer *mNextSublayer;
    MRTransition *mCurrentTransition;
    BOOL mIsTransitioning;
    MRLayer *mSublayerToPrecompute;
    id mPrecomputingTarget;
    unsigned int mPrecomputingType;
    double mTransitionStartTime;
    double mTransitionDuration;
    BOOL mTransitionIsBackwards;
    NSDictionary *mTransitionChanges;
    NSMutableArray *mHistoryBack;
    NSMutableArray *mHistoryForth;
    BOOL mBackAndForthIsEnabled;
    double mForcedTransitionTime;
}

- (void)setForcedTransitionTime:(double)fp8;
- (double)forcedTransitionTime;
- (void)setBackAndForthIsEnabled:(BOOL)fp8;
- (BOOL)backAndForthIsEnabled;
- (id)currentSublayer;
- (id)sublayers;
- (id)_dumpLayerWithOptions:(unsigned int)fp8;
- (id)_currentState;
- (void)endTransitionToSublayer;
- (double)goBack;
- (double)goForth;
- (double)doTransitionBackwards:(id)fp8;
- (double)doTransition:(id)fp8;
- (double)doTransition:(id)fp8 backwards:(BOOL)fp12;
- (id)actionForKey:(id)fp8 recursive:(BOOL)fp12;
- (id)actionHitAtPoint:(struct CGPoint)fp8 layer:(id *)fp16;
- (id)sublayerForPlugObjectID:(id)fp8 recursive:(BOOL)fp12;
- (id)sublayerForID:(id)fp8;
- (BOOL)_isNative3D;
- (BOOL)hasAudio;
- (id)sublayerHitAtPoint:(struct CGPoint)fp8 onlyIfHitElement:(BOOL)fp16 localPoint:(struct CGPoint *)fp20;
- (id)patchworkAtTime:(double)fp8 inContext:(id)fp16 withArguments:(id)fp20;
- (BOOL)prerenderForTime:(double)fp8 inContext:(id)fp16 withArguments:(id)fp20;
- (BOOL)isAlphaFriendly;
- (BOOL)isOpaque;
- (BOOL)isLoadedForTime:(double)fp8;
- (void)depreactivate:(BOOL)fp8;
- (void)deactivate;
- (void)endMorphing;
- (void)beginMorphingToAspectRatio:(float)fp8 withDuration:(double)fp12;
- (void)synchronizeTime;
- (BOOL)hasSomethingToRender;
- (void)setPixelSize:(struct CGSize)fp8;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)cleanup;
- (id)initWithPlug:(id)fp8 andParameters:(id)fp12 inSuperlayer:(id)fp16;

@end

