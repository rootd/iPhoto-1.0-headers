/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

#import "_ACAccountTypeIdentifierTwitter.h"

#import "MRLoadable-Protocol.h"
#import "MRRenderable-Protocol.h"

@class MRAsset, MRImage, NSDictionary, NSInvocationOperation, NSLock, NSString;

@interface MRImageProvider : _ACAccountTypeIdentifierTwitter <MRLoadable, MRRenderable>
{
    NSString *mAssetPath;
    MRAsset *mAsset;
    struct CGSize mDefaultSize;
    NSString *mImageSizeScript;
    NSDictionary *mEffectAttributes;
    NSInvocationOperation *mPreloadOperation;
    NSLock *mPreloadOperationLock;
    MRImage *mOriginalImage;
    struct CGSize mOriginalImageSize;
    BOOL mIsLoaded;
    struct CGSize mRequestedSize;
    double mShowTime;
    double mShowDuration;
    struct CGSize mLastImageSize;
    double mLastTime;
    struct CGSize mLastDaSize;
    BOOL mNeedsToUpdate;
    BOOL mIsUpdatingLive;
    BOOL mNeedsToUnloadOnEndLiveUpdate;
    BOOL mIsMonochromatic;
    BOOL mUseMipmapping;
    BOOL mUsePowerOfTwo;
    BOOL mIsCleanedUp;
    BOOL mJustHoldIt;
}

- (void)setOriginalImageSize:(struct CGSize)fp8;
- (struct CGSize)originalImageSize;
- (id)assetPath;
- (void)setJustHoldIt:(BOOL)fp8;
- (BOOL)justHoldIt;
- (struct CGSize)requestedSize;
- (void)setShowDuration:(double)fp8;
- (double)showDuration;
- (void)setShowTime:(double)fp8;
- (double)showTime;
- (void)setUsePowerOfTwo:(BOOL)fp8;
- (BOOL)usePowerOfTwo;
- (void)setUseMipmapping:(BOOL)fp8;
- (BOOL)useMipmapping;
- (void)setIsMonochromatic:(BOOL)fp8;
- (BOOL)isMonochromatic;
- (BOOL)isLoaded;
- (id)effectAttributes;
- (id)imageSizeScript;
- (struct CGSize)defaultSize;
- (id)patchworkAtTime:(double)fp8 inContext:(id)fp16 withArguments:(id)fp20;
- (id)retainedByUserRenderedImageAtTime:(double)fp8 inContext:(id)fp16 withArguments:(id)fp20;
- (void)renderAtTime:(double)fp8 inContext:(id)fp16 withArguments:(id)fp20;
- (BOOL)prerenderForTime:(double)fp8 inContext:(id)fp16 withArguments:(id)fp20;
- (BOOL)isInfinite;
- (BOOL)isAlphaFriendly;
- (BOOL)isOpaque;
- (BOOL)isNative3D;
- (void)cancelLoading;
- (void)unload;
- (void)loadTextureWithArguments:(id)fp8;
- (void)_loadTextureWithArguments:(id)fp8;
- (void)loadWithArguments:(id)fp8;
- (void)loadForTime:(double)fp8 inContext:(id)fp16 withArguments:(id)fp20 now:(BOOL)fp24;
- (BOOL)isLoadedForTime:(double)fp8;
- (BOOL)endLiveUpdate;
- (BOOL)beginLiveUpdate;
- (void)setAssetPath:(id)fp8;
- (struct CGSize)imageSizeForAspectRatio:(float)fp8;
- (void)setEffectAttributes:(id)fp8;
- (void)setImageSizeScript:(id)fp8;
- (float)imageAspectRatio;
- (void)setDefaultSize:(struct CGSize)fp8;
- (void)cleanup;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

