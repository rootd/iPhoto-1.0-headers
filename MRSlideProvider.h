/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

#import "_ACAccountTypeIdentifierTwitter.h"

#import "MRLoadable-Protocol.h"
#import "MRRenderable-Protocol.h"

@class MCSlide, MRFrame, MRImage, MRLayer, MRLayerEffect, NSConditionLock, NSDictionary, NSInvocationOperation, NSLock, NSString;

@interface MRSlideProvider : _ACAccountTypeIdentifierTwitter <MRLoadable, MRRenderable>
{
    struct CGSize mDefaultSize;
    float mStillTime;
    NSString *mImageSizeScript;
    NSDictionary *mEffectAttributes;
    NSString *mShowTimeScript;
    NSInvocationOperation *mPreloadOperation;
    NSLock *mPreloadOperationLock;
    NSConditionLock *mPreloadSemaphore;
    MRFrame *mFrame;
    MRImage *mOriginalImage;
    MRImage *mOutputImage;
    struct CGSize mRequestedSize;
    double mShowTime;
    double mShowDuration;
    double mSlideStartTime;
    double mSlideDuration;
    MRLayerEffect *mEffectLayer;
    MCSlide *mSlide;
    int mKenBurnsType;
    NSString *mAssetPath;
    float mOriginalImageAspectRatio;
    MRLayer *mSlideLayer;
    struct CGSize mImageSize;
    struct CGSize mLastImageSize;
    double mLastTime;
    struct CGSize mLastDaSize;
    struct CGSize mSizeFactor;
    BOOL mIsAnimatedGIF;
    MCSlide *mSlideCopy;
    unsigned int mSlideIndex;
    unsigned int mFlags;
}

- (double)slideDuration;
- (double)slideStartTime;
- (id)frame;
- (void)setKenBurnsType:(int)fp8;
- (int)kenBurnsType;
- (id)slide;
- (void)setSizeFactor:(struct CGSize)fp8;
- (struct CGSize)sizeFactor;
- (struct CGSize)requestedSize;
- (void)setShowDuration:(double)fp8;
- (double)showDuration;
- (void)setShowTime:(double)fp8;
- (double)showTime;
- (void)setShowTimeScript:(id)fp8;
- (id)showTimeScript;
- (id)effectAttributes;
- (id)imageSizeScript;
- (void)setStillTime:(float)fp8;
- (float)stillTime;
- (struct CGSize)defaultSize;
- (id)patchworkAtTime:(double)fp8 inContext:(id)fp16 withArguments:(id)fp20;
- (id)retainedByUserRenderedImageAtTime:(double)fp8 inContext:(id)fp16 withArguments:(id)fp20;
- (void)renderAtTime:(double)fp8 inContext:(id)fp16 withArguments:(id)fp20;
- (BOOL)prerenderForTime:(double)fp8 inContext:(id)fp16 withArguments:(id)fp20;
- (BOOL)updateStuffWithAssetManager:(id)fp8;
- (void)_computeImageSizeInContext:(id)fp8 withArguments:(id)fp12;
- (BOOL)isInfinite;
- (BOOL)isAlphaFriendly;
- (BOOL)isOpaque;
- (BOOL)isNative3D;
- (void)cancelLoading;
- (void)unload;
- (void)loadTextureWithArguments:(id)fp8;
- (void)_loadTextureWithArguments:(id)fp8;
- (void)loadWithArguments:(id)fp8;
- (void)loadForTime:(double)fp8 inContext:(id)fp16 withArguments:(id)fp20 now:(BOOL)fp24;
- (BOOL)isLoadedForTime:(double)fp8;
- (void)_unloadIfNotUpdatingLive;
- (BOOL)endLiveUpdate;
- (BOOL)beginLiveUpdate;
- (void)setTime:(double)fp8;
- (double)time;
- (void)setIsPlaying:(BOOL)fp8;
- (void)setSlide:(id)fp8;
- (void)updateShowTimeAndDurationWithPlug:(id)fp8 andAttributes:(id)fp12;
- (struct CGSize)unframedImageSizeForAspectRatio:(float)fp8 frameID:(id)fp12 andFrameAttributes:(id)fp16 atIndex:(unsigned long)fp20 framedImageSize:(struct CGSize *)fp24;
- (struct CGSize)framedImageSizeAtIndex:(unsigned long)fp8 aspectRatio:(float)fp12;
- (BOOL)isLoaded;
- (BOOL)isPlaying;
- (void)setSlideIsReadonly:(BOOL)fp8;
- (BOOL)slideIsReadonly;
- (void)setIsStill:(BOOL)fp8;
- (BOOL)isStill;
- (void)setEffectAttributes:(id)fp8;
- (void)setImageSizeScript:(id)fp8;
- (void)setUseMipmapping:(BOOL)fp8;
- (BOOL)useMipmapping;
- (void)setIsMonochromatic:(BOOL)fp8;
- (BOOL)isMonochromatic;
- (void)setDefaultSize:(struct CGSize)fp8;
- (float)imageAspectRatio;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)cleanup;
- (void)finalize;
- (void)dealloc;
- (id)initWithEffectLayer:(id)fp8;

@end

