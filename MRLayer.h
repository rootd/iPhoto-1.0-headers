/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

#import "_ACAccountTypeIdentifierTwitter.h"

#import "MRLoadable-Protocol.h"
#import "MRRenderable-Protocol.h"

@class MCPlug, MCPlugHaven, MCPlugParallel, MCPlugSerial, MRAudioPlayer, MRLayerClock, MRRenderer, NSDictionary, NSMutableArray, NSMutableDictionary, NSString;

@interface MRLayer : _ACAccountTypeIdentifierTwitter <MRLoadable, MRRenderable>
{
    MRLayer *mSuperlayer;
    MCPlug *mPlug;
    MCPlugSerial *mPlugAsSerial;
    MCPlugParallel *mPlugAsParallel;
    MCPlugHaven *mPlugAsHaven;
    NSString *mUUID;
    NSString *mIDInSupercontainer;
    unsigned int mIndex;
    struct CGSize mPixelSize;
    double mTimeIn;
    BOOL mIsPreactivated;
    BOOL mIsActivated;
    BOOL mOkToDeferKenBurns;
    MRLayerClock *mClock;
    CDAnonymousStruct1 *mRenderingState;
    NSMutableDictionary *mAnimationTriggers;
    NSMutableDictionary *mPersistentState;
    BOOL mIsSelected;
    BOOL mIsDimmed;
    NSDictionary *mParameters;
    MRRenderer *mRenderer;
    BOOL mIsPrecomputing;
    BOOL mIsReadonly;
    BOOL mDoAudio;
    BOOL mNeedsRendering;
    BOOL mNeedsToUpdateGeometry;
    BOOL mNeedsToUpdateInitialState;
    BOOL mNeedsToRequestRebuildAudio;
    BOOL mNeedsToRequestRebuildVolume;
    BOOL mNeedsToSynchronizeTime;
    NSMutableArray *mLayerCommandQueue;
    BOOL mIsScheduledForDestruction;
    double mTimeStamp;
    BOOL mSupportsAccumulation;
    MRAudioPlayer *mAudioPlayer;
    id mParentHelper;
}

- (void)setNeedsToSynchronizeTime:(BOOL)fp8;
- (BOOL)needsToSynchronizeTime;
- (unsigned int)index;
- (id)idInSupercontainer;
- (void)setParentHelper:(id)fp8;
- (id)parentHelper;
- (id)animationTriggers;
- (id)persistentState;
- (BOOL)isScheduledForDestruction;
- (BOOL)supportsAccumulation;
- (double)timeStamp;
- (BOOL)isDimmed;
- (void)setIsSelected:(BOOL)fp8;
- (BOOL)isSelected;
- (BOOL)isPreactivated;
- (BOOL)isActivated;
- (void)setTimeIn:(double)fp8;
- (double)timeIn;
- (id)parameters;
- (id)uuid;
- (struct CGSize)pixelSize;
- (id)plugAsHaven;
- (id)plugAsParallel;
- (id)plugAsSerial;
- (id)plug;
- (id)superlayer;
- (void)setIsDimmed:(BOOL)fp8;
- (id)_dumpLayerWithOptions:(unsigned int)fp8;
- (id)_currentState;
- (void)_rebuildAudio;
- (BOOL)_setStateValue:(id)fp8 forKey:(id)fp12;
- (void)_sendAction:(id)fp8 withStates:(id)fp12 async:(BOOL)fp16 yesterday:(BOOL)fp20;
- (void)_updateStateWithContext:(id)fp8;
- (double)doGenericAction:(id)fp8;
- (double)doStateOperation:(id)fp8;
- (double)doActionTrigger:(id)fp8;
- (double)doAnimationTrigger:(id)fp8;
- (id)actionForKey:(id)fp8 recursive:(BOOL)fp12;
- (id)actionHitAtPoint:(struct CGPoint)fp8 layer:(id *)fp16;
- (void)_applyState:(id)fp8;
- (struct CGPoint)convertGlobalPoint:(struct CGPoint)fp8;
- (struct CGPoint)convertLocalPoint:(struct CGPoint)fp8;
- (BOOL)hasAudio;
- (void)scheduleForDestruction;
- (void)stampTime;
- (BOOL)supportsDynamicExpansion;
- (id)patchworkAtTime:(double)fp8 inContext:(id)fp16 withArguments:(id)fp20;
- (id)retainedByUserRenderedImageAtTime:(double)fp8 inContext:(id)fp16 withArguments:(id)fp20;
- (void)renderAtTime:(double)fp8 inContext:(id)fp16 withArguments:(id)fp20;
- (id)__retainedByUserRenderedImageAtTime:(double)fp8 inContext:(id)fp16 withArguments:(id)fp20;
- (BOOL)prerenderForTime:(double)fp8 inContext:(id)fp16 withArguments:(id)fp20;
- (void)_setScissorRectOnContext:(id)fp8 saveTo:(int *)fp12;
- (BOOL)isFlatAndSquare;
- (BOOL)isAlphaFriendly;
- (BOOL)isInfinite;
- (BOOL)isOpaque;
- (BOOL)isNative3D;
- (void)cancelLoading;
- (void)unload;
- (void)loadForTime:(double)fp8 inContext:(id)fp16 withArguments:(id)fp20 now:(BOOL)fp24;
- (BOOL)isLoadedForTime:(double)fp8;
- (BOOL)isActivatedAtTime:(double)fp8;
- (BOOL)isPreactivatedAtTime:(double)fp8;
- (void)depreactivate:(BOOL)fp8;
- (void)deactivate;
- (void)activate;
- (void)preactivate;
- (void)setDuration:(double)fp8;
- (double)duration;
- (void)endMorphing;
- (void)beginMorphingToAspectRatio:(float)fp8 withDuration:(double)fp12;
- (void)synchronizeTime;
- (void)resumeOrPause:(BOOL)fp8;
- (BOOL)hasSomethingToRender;
- (void)updateGeometry;
- (void)setPixelSize:(struct CGSize)fp8;
- (CDAnonymousStruct1 *)renderingState;
- (id)clock;
- (void)setNeedsUpdateForPluggerOfSublayer:(id)fp8;
- (id)sublayerForPrecomputingWithPlug:(id)fp8;
- (id)sublayerWithPlug:(id)fp8;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)cleanup;
- (void)finalize;
- (void)dealloc;
- (id)initWithPlug:(id)fp8 andParameters:(id)fp12 inSuperlayer:(id)fp16;

@end

